{"version":3,"sources":["api/index.js","components/PokeCard.js","components/PokeList.js","App.js","index.js"],"names":["url","fetchPokemon","pokemon","a","changeableUrl","axios","get","data","id","name","sprites","types","fetchPokedex","console","log","results","map","PokeCard","props","useState","fetchData","setFetchedData","useEffect","pokemonData","fetchAPI","Tab","className","icon","src","front_default","label","PokeList","fetchedPokedex","setFetchedPokedex","PokemonList","Grid","container","i","App","state","spacing","Component","ReactDOM","render","document","getElementById"],"mappings":"6TAEMA,EAAM,oCAECC,EAAY,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACvBC,EAAgBJ,EAEhBE,IACHE,EAAa,UAAMJ,EAAN,YAAaE,IAJA,kBAUhBG,IAAMC,IAAIF,GAVM,2BASzBG,KAAQC,EATiB,EASjBA,GAAIC,EATa,EASbA,KAAMC,EATO,EASPA,QAASC,EATF,EASEA,MATF,kBAYnB,CACNH,KACAC,OACAC,UACAC,UAhByB,2HAAH,sDAuBZC,EAAY,uCAAG,8BAAAT,EAAA,6DAC3BU,QAAQC,IAAI,4BADe,kBAKhBT,IAAMC,IAAN,UAAaN,EAAb,eALgB,uBAIjBe,EAJiB,EAIzBR,KAAQQ,QAJiB,kBAQnBA,EAAQC,KAAI,SAACd,GAAD,OAAaA,MARN,gCAU1BW,QAAQC,IAAR,MAV0B,yDAAH,qDCCVG,EAvBE,SAACC,GAAW,IACpBhB,EAAYgB,EAAZhB,QADmB,EAGSiB,mBAAS,IAHlB,mBAGpBC,EAHoB,KAGTC,EAHS,KAK3BC,qBAAU,YACK,uCAAG,4BAAAnB,EAAA,sEACUF,EAAaC,EAAQO,MAD/B,OACVc,EADU,OAEhBF,EAAeE,GAFC,2CAAH,qDAKdC,KACE,CAACH,IAEiCD,EAA7BZ,GAdmB,IAcfC,EAAyBW,EAAzBX,KAAMC,EAAmBU,EAAnBV,QAAmBU,EAAVT,MAE3B,OAAKD,EAGG,cAACe,EAAA,EAAD,CAAKC,UAAU,WAAWC,KAAM,qBAAKC,IAAKlB,EAAQmB,gBAAuBC,MAAOrB,IAFhF,cAACgB,EAAA,EAAD,CAAKC,UAAU,WAAWI,MAAM,qBCO1BC,EAvBE,WAAO,IAAD,EACsBZ,mBAAS,IAD/B,mBACfa,EADe,KACCC,EADD,KActB,OAXAX,qBAAU,YACK,uCAAG,4BAAAnB,EAAA,sEACUS,IADV,OACVsB,EADU,OAEhBD,EAAkBC,GAFF,2CAAH,qDAKdV,KACE,CAACS,IAKH,cAACE,EAAA,EAAD,CAAMT,UAAU,WAAWU,WAAS,EAApC,SACEJ,EAAehB,KAAI,SAACd,EAASmC,GAC7B,OAAO,cAAC,EAAD,CAAkB7B,GAAI6B,EAAGnC,QAASA,GAAnBmC,SCDXC,G,wDAhBd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZrC,QAAS,IAHG,E,qDAQb,OACC,cAACiC,EAAA,EAAD,CAAMT,UAAU,MAAMU,WAAS,EAACI,QAAS,EAAzC,SACC,cAAC,EAAD,U,GAXcC,cCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4ca078e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst url = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\nexport const fetchPokemon = async (pokemon) => {\r\n\tlet changeableUrl = url;\r\n\r\n\tif (pokemon) {\r\n\t\tchangeableUrl = `${url}/${pokemon}`;\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { id, name, sprites, types },\r\n\t\t} = await axios.get(changeableUrl);\r\n\r\n\t\treturn {\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tsprites,\r\n\t\t\ttypes,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn error;\r\n\t}\r\n};\r\n\r\nexport const fetchPokedex = async () => {\r\n\tconsole.log('Fetching All 151 Pokemon');\r\n\ttry {\r\n\t\tconst {\r\n\t\t\tdata: { results },\r\n\t\t} = await axios.get(`${url}?limit=151`);\r\n\r\n\t\t// the results returns the name and the url to the api\r\n\t\treturn results.map((pokemon) => pokemon);\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Tab } from '@material-ui/core';\r\nimport '../styles/pokecard.css';\r\nimport { fetchPokemon } from '../api';\r\n\r\nconst PokeCard = (props) => {\r\n\tconst { pokemon } = props;\r\n\r\n\tconst [fetchData, setFetchedData] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tconst pokemonData = await fetchPokemon(pokemon.name);\r\n\t\t\tsetFetchedData(pokemonData);\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedData]);\r\n\r\n\tconst { id, name, sprites, types } = fetchData;\r\n\r\n\tif (!sprites) {\r\n\t\treturn <Tab className=\"pokecard\" label=\"...Loading Pkmn\" />;\r\n\t} else {\r\n\t\treturn <Tab className=\"pokecard\" icon={<img src={sprites.front_default}></img>} label={name} />;\r\n\t}\r\n};\r\n\r\nexport default PokeCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport '../styles/pokelist.css';\r\nimport PokeCard from './PokeCard';\r\nimport { fetchPokedex } from '../api';\r\n\r\nconst PokeList = () => {\r\n\tconst [fetchedPokedex, setFetchedPokedex] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI = async () => {\r\n\t\t\tconst PokemonList = await fetchPokedex();\r\n\t\t\tsetFetchedPokedex(PokemonList);\r\n\t\t};\r\n\r\n\t\tfetchAPI();\r\n\t}, [setFetchedPokedex]);\r\n\r\n\t// take the list\r\n\t// for every pokemon, display pokemon name\r\n\treturn (\r\n\t\t<Grid className=\"pokelist\" container>\r\n\t\t\t{fetchedPokedex.map((pokemon, i) => {\r\n\t\t\t\treturn <PokeCard key={i} id={i} pokemon={pokemon} />;\r\n\t\t\t})}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default PokeList;\r\n","import React, { Component } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport PokeList from './components/PokeList';\r\nimport './styles/app.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tpokemon: [],\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Grid className=\"app\" container spacing={1}>\r\n\t\t\t\t<PokeList />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}